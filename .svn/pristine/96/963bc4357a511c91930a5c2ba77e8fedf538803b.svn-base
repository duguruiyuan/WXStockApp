// modules/market/stock.js
var util = require('../utils/util.js')
var KLine = require('../kline/kline.js')
var stockUtil = require('../kline/stockUtil.js')
const app = getApp();
var httpUtil = require('../../../common/http.js')
var _const = require('../../../common/const.js').const
Page({
    data: {
        // 个股头部数据
        quotation: {},
        goodsId: 300589,
        goodsName: 'N江龙',
        code: 'sz300589',
        quotationColor: '#eb333b',
        currentTimeIndex: 0,//k线导航
        currentInfoIndex: 0,
        quotePeriod: 1,//数据加载id
        quoteData: {
            canvasIndex: 0//画布id
        }
    },
    onLoad: function (option) {
        // 页面初始化 options为页面跳转所带来的参数
        if (option.hasOwnProperty('id') || option.hasOwnProperty('name') || option.hasOwnProperty('code')) {
            this.setData({
                goodsId: parseInt(option.id),
                goodsName: option.name,
                code: option.code
            })
        }
        wx.setNavigationBarTitle({
            title: `${this.data.goodsName} (${this.data.code})`
        })

        initData(this)
        this.timerId = -1
        this.getData()
        // 页面初始化 options为页面跳转所带来的参数
        this.kline = new KLine()
    },
    getData: function () {
        console.log('自动获取')
        this.getQuotation()
        this.getQuotationLine()
    },
    getQuotation: function () {
        var that = this
        let params = {
            code: this.data.code
        }
        httpUtil.http.get(_const.url.market_quotation, params).then(function (res) {


            if (res.data.length > 0) {
                var volumn = '';
                if (util.isHS(res.data[0].code)) {
                    volumn = res.data[0].volumn / 100;
                } else {
                    volumn = res.data[0].volumn;
                }
                that.setData({
                    quotation: {
                        price: res.data[0].price,//现价
                        change: res.data[0].change,//变动
                        changePct: res.data[0].changePct,//变动率
                        open: res.data[0].openPrice,//开盘价
                        high: res.data[0].highPrice,//最高价
                        low: res.data[0].lowPrice,//最低价
                        turnoverRate: util.formatHsl(res.data[0].turnoverRate * 100),//换手率
                        closePrice: res.data[0].closePrice,
                        swing: res.data[0].swing,
                        volumn: volumn,//成交量
                        jl: '--',
                        totalValue: util.formatAmount(res.data[0].totalValue),//总股本
                        volumnPrice: util.formatAmount(res.data[0].volumnPrice),//成交额
                        lb: '--',
                        circulationValue: util.formatAmount(res.data[0].circulationValue),//流通市值
                        date: 0,
                        time: 0,
                        color: util.getColorByZd(res.data[0].change),
                        goodsId: res.data[0].id
                    }
                })
                wx.hideNavigationBarLoading()
            }

        }.bind(this))
    },
    getQuotationLine: function (callback) {
        if (this.data.quotePeriod == 1) {
            // 获取分时走势
            this.getMinData(callback)
        } else {
            // 获取K线走势
            this.getKlineData(callback)
        }
    },
    getMinData: function (callback) {
        // wx.showNavigationBarLoading()
        var that = this

        stockUtil.getMinutes({
            code: util.trim(that.data.code),
            id: that.data.goodsId
        }).then(function (results) {
            if (callback != null && typeof (callback) == 'function') {
                callback()
            }
            that.kline.drawMiniteCanvas(results, getCanvasId(that.data.quotePeriod))
        }, function (res) {
            console.log("------fail----", res)
        })
    },
    getKlineData: function (callback) {
        var that = this

        stockUtil.getKLines({
            code: util.trim(that.data.code),
            period: that.data.currentTimeIndex,
            ma: 7
        }).then(function (results) {
            if (callback != null && typeof (callback) == 'function') {
                callback()
            }
            that.kline.drawKLineCanvas(results, getCanvasId(that.data.quotePeriod), that.data.quotePeriod)
        }, function (res) {
            console.log("------fail----", res)
        })
    },
    onPeriodSelectorClick: function (e) {//k线按钮切换
        let index = e.currentTarget.dataset.index
        let period = 1
        var canvasIndex = 0

        switch (index) {
            case "0":
                period = 1;
                canvasIndex = 0
                break;
            case "1":
                period = 100;
                canvasIndex = 1
                break;
            case "2":
                period = 101;
                canvasIndex = 2
                break;
            case "3":
                period = 102;
                canvasIndex = 3
                break;
            case "4":
                period = 60;
                canvasIndex = 4
                break;
        }

        this.setData({
            currentTimeIndex: index,
            quotePeriod: period,
            quoteData: {
                canvasIndex: canvasIndex
            }
        })

        if (this.kline.isCanvasDrawn(canvasIndex + 1)) return;

        this.getQuotationLine(function () {
            wx.hideNavigationBarLoading()
        })
    },
    //定时获取数据
    startAutoRequest: function () {
        var that = this;
        var data = app.globalData
        var interval = data.netWorkType == 'wifi' ? data.WIFI_REFRESH_INTERVAL : data.MOBILE_REFRESH_INTERVAL;
        this.timerId = setInterval(function () {
            that.getData();
        }, interval);
    },
    // 停止获取数据
    stopAutoRequest: function () {
        clearInterval(this.timerId)
    },
    onReady: function () {
        // 页面渲染完成
    },
    onShow: function () {
        // 页面显示
        this.startAutoRequest()
    },
    onHide: function () {
        // 页面隐藏
    },
    onUnload: function () {
        // 页面关闭
        this.stopAutoRequest()
    }
})

function initData(that) {
    // 初始化数据显示
    var quota = {
        price: '--',
        change: '--',
        changePct: '--',
        open: '--',
        high: '--',
        low: '--',
        turnoverRate: '--',
        closePrice: '--',
        swing: '--',
        volumn: '--',
        jl: '--',
        totalValue: '--',
        volumnPrice: '--',
        lb: '--',
        circulationValue: '--',
        date: 0,
        time: 0,
        color: '#e64340',
        goodsId: 0
    }
    that.setData({
        quotation: quota
    })
}

function getCanvasId(period) {
    switch (period) {
        case 1:
            return 1;
            break;
        case 100:
            return 2;
            break;
        case 101:
            return 3;
            break;
        case 102:
            return 4;
            break;
        case 60:
            return 5;
            break;
    }
    return 1;
}